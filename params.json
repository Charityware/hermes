{"name":"Luxo","tagline":"A simple notification component for Reactjs","body":"# Luxo\r\n[![NPM](https://nodei.co/npm/luxo.png)](https://www.npmjs.com/package/luxo)\r\n\r\n[![npm version](https://badge.fury.io/js/luxo.svg)](https://www.npmjs.com/package/luxo)\r\n[![](https://img.shields.io/badge/such-badge-brightgreen.svg)](https://charityware.co)\r\n\r\nA simple message component for reactjs. Forked from [react-crouton](https://github.com/xeodou/react-crouton).\r\n\r\n## Getting Started\r\n\r\nInstall via [npm](http://npmjs.org/luxo)\r\n\r\n```\r\n   npm i luxo --save\r\n\r\n```\r\n\r\n## Usage\r\n\r\n```Javascript\r\nvar Luxo = require('luxo')\r\n\r\nvar data = {\r\n    id: Date.now(),\r\n    type: 'error',\r\n    message: 'Hello Luxo!',\r\n    autoDismiss: true || false,\r\n    onDismiss: listener,\r\n    hidden: false,\r\n    timeout: 2000\r\n}\r\n\r\n<Luxo\r\n    id={data.id}\r\n    type={data.type}\r\n    message={data.message}\r\n    onDismiss={data.onDismiss}\r\n    hidden={data.hidden}\r\n    timeout={data.timeout}\r\n    autoDismiss={data.autoDismiss}/>\r\n```\r\n\r\n## Component Options\r\n\r\n**`id`** required, every message need an unique id. You can use something like [Chance](https://www.npmjs.com/package/chance) to generate random integers if you are so inclined\r\n\r\ntype: `number`\r\n\r\n**`message`** required, the type of message that you'll be sending. You can provide either a single string or array of strings. If you provide multiple strings, each message will get it's own div. This could be useful if you need to provide a series of messages at once but have them display within one notification.\r\n\r\ntype: `string` || `array`\r\n\r\nexample:\r\n\r\n```\r\nmessage: 'Hello React-Luxo'\r\nmessage: ['You did something', 'You did something else!', 'This is fun']\r\n```\r\n\r\n**`type`** required, define what type message you want to create. This will be the `className` that gets set on a message. You could easily set up some nice nested LESS/SCSS styling that would let you create some custom styling for different message types.\r\n\r\ntype: `string`\r\n\r\n**`hidden`** optional, control this property to hide or show a Luxo component.\r\n\r\ntype: `boolean`, default is `false`\r\n\r\n**`autoDismiss`** optional, Luxo will auto-dismiss if set this proptety; defaults to true.\r\n\r\ntype: `boolean`\r\n\r\n**`timeout`** optional, set how long (ms) to auto-dismiss the Luxo component.\r\n\r\ntype: `number`, default is `3000` ms (3 seconds)\r\n\r\n**`onDismiss`** optional, Luxo will invoke this listener when it dismissed.\r\n\r\ntype: `function`\r\n\r\n## License\r\n\r\nMIT\r\n\r\n####TODO:\r\n- new API for buttons\r\n- better tests\r\n- provide several css libs to give you an out-of-the-box solution\r\n","google":"UA-48345857-4","note":"Don't delete this file! It's used internally to help with page regeneration."}